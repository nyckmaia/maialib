name: Build Wheels

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - "**"
  release:
    types:
      - published

jobs:
  generate_stubs:
    name: Generate Python Stubs
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install pybind11-stubgen
        run: python -m pip install pybind11-stubgen
    
      - name: Install maialib
        run: python -m pip install .
    
      - name: Generate stubs
        run: | 
          pybind11-stubgen maialib '--output-dir=./stubs/' '--root-module-suffix=' '--ignore-invalid=all' '--no-setup-py'
          pybind11-stubgen maialib.maiacore '--output-dir=./stubs/' '--root-module-suffix=' '--ignore-invalid=all' '--no-setup-py'
          pybind11-stubgen maialib.maiapy '--output-dir=./stubs/' '--root-module-suffix=' '--ignore-invalid=all' '--no-setup-py'

      - name: Copy stubs to package dir
        run: cp -r ./stubs/* .

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: generate_stubs
    runs-on: ${{ matrix.os }}
    env:
      # Skip CPython 3.6 and CPython 3.7
      CIBW_SKIP: cp36-* cp37-* cp39-* cp310-* cp311-* pp36-* pp37-* pp38-* pp39-* pp310-* pp311-*
      # CIBW_BUILD: "cp38-manylinux_x86_64"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [macos-latest]
        # os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_ARCHS_MACOS: auto universal2
        # with:
        #   package-dir: ./maialib
        #   output-dir: wheelhouse
          # config-file: "{package}/pyproject.toml"

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  upload_all:
    name: Upload All
    needs: build_wheels
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          password: ${{ secrets.pypi_password }}
